{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","body","name","email","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAEpB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGF,IAEF,OACD,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAGL,qBAAKC,UAAU,oBAAf,SACGH,QCfIK,G,MAAc,SAAC,GAAD,IACzBC,EADyB,EACzBA,SADyB,OAGzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCNrCC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBR,EAEEQ,EAFFR,MACAD,EACES,EADFT,KAGF,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,MCNMU,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBF,EAAgCE,EAAhCF,KAAMJ,EAA0BM,EAA1BN,SAAUO,EAAgBD,EAAhBC,MAAOb,EAASY,EAATZ,KAE/B,OACE,sBAAKG,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eACAH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGP,UAAU,iBAAb,SACGH,IAGkB,IAApBM,EAASQ,OAEN,mCACE,mBAAG,UAAQ,oBAAX,+BAGD,cAAC,EAAD,CAAaR,SAAUA,SC5BrBS,EAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,MADsB,OAGtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCQtC,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAVmBQ,EAUDN,EAAKM,OAThBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAUhDZ,UAPyBe,EAOGT,EAAKJ,GAN1Bc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAA2BA,EAJNH,KAcRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCpBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0b53f0f4.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { body, name, email } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n        {' by '}\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({\n  comments,\n}) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { user, comments, title, body } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n          {user && <UserInfo user={user} />}\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {comments.length === 0\n        ? (\n          <>\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )\n        : (<CommentList comments={comments} />)\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({\n  posts,\n}) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction addCommentsToPost(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: addCommentsToPost(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}